// <auto-generated />
using System;
using Armory.BL.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Armory.BL.Migrations
{
    [DbContext(typeof(ArmoryContext))]
    [Migration("20230403081810_AddAirports")]
    partial class AddAirports
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("Armory.BL.Model.Act", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AirportID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AmmunitionBaggageTagNumber")
                        .HasColumnType("TEXT");

                    b.Property<int>("AmmunitionCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AmmunitionID")
                        .HasColumnType("INTEGER");

                    b.Property<double>("AmmunitionWeight")
                        .HasColumnType("REAL");

                    b.Property<int>("CityID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CrewMemberID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("FlightID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlaneID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SecurityOfficerID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WeaponBaggageTagNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("WeaponCharacteristics")
                        .HasColumnType("TEXT");

                    b.Property<int>("WeaponID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WeaponRegistrationNumber")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("AirportID");

                    b.HasIndex("AmmunitionID");

                    b.HasIndex("CityID");

                    b.HasIndex("CrewMemberID");

                    b.HasIndex("FlightID");

                    b.HasIndex("PlaneID");

                    b.HasIndex("SecurityOfficerID");

                    b.HasIndex("WeaponID");

                    b.ToTable("Acts");
                });

            modelBuilder.Entity("Armory.BL.Model.Airport", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Airports");
                });

            modelBuilder.Entity("Armory.BL.Model.Ammunition", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Ammunitions");
                });

            modelBuilder.Entity("Armory.BL.Model.City", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("Armory.BL.Model.CrewMember", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("CrewMembers");
                });

            modelBuilder.Entity("Armory.BL.Model.Flight", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Number")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("Armory.BL.Model.Plane", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Number")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Planes");
                });

            modelBuilder.Entity("Armory.BL.Model.Position", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("Armory.BL.Model.SecurityOfficer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("PositionID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("PositionID");

                    b.ToTable("SecurityOfficers");
                });

            modelBuilder.Entity("Armory.BL.Model.Weapon", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Model")
                        .HasColumnType("TEXT");

                    b.Property<int>("TypeID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("TypeID");

                    b.ToTable("Weapons");
                });

            modelBuilder.Entity("Armory.BL.Model.WeaponType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("WeaponTypes");
                });

            modelBuilder.Entity("Armory.BL.Model.Act", b =>
                {
                    b.HasOne("Armory.BL.Model.Airport", "Airport")
                        .WithMany()
                        .HasForeignKey("AirportID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Armory.BL.Model.Ammunition", "Ammunition")
                        .WithMany("Acts")
                        .HasForeignKey("AmmunitionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Armory.BL.Model.City", "City")
                        .WithMany("Acts")
                        .HasForeignKey("CityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Armory.BL.Model.CrewMember", "CrewMember")
                        .WithMany("Acts")
                        .HasForeignKey("CrewMemberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Armory.BL.Model.Flight", "Flight")
                        .WithMany()
                        .HasForeignKey("FlightID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Armory.BL.Model.Plane", "Plane")
                        .WithMany()
                        .HasForeignKey("PlaneID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Armory.BL.Model.SecurityOfficer", "SecurityOfficer")
                        .WithMany("Acts")
                        .HasForeignKey("SecurityOfficerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Armory.BL.Model.Weapon", "Weapon")
                        .WithMany("Acts")
                        .HasForeignKey("WeaponID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Airport");

                    b.Navigation("Ammunition");

                    b.Navigation("City");

                    b.Navigation("CrewMember");

                    b.Navigation("Flight");

                    b.Navigation("Plane");

                    b.Navigation("SecurityOfficer");

                    b.Navigation("Weapon");
                });

            modelBuilder.Entity("Armory.BL.Model.SecurityOfficer", b =>
                {
                    b.HasOne("Armory.BL.Model.Position", "Position")
                        .WithMany("SecurityOfficers")
                        .HasForeignKey("PositionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");
                });

            modelBuilder.Entity("Armory.BL.Model.Weapon", b =>
                {
                    b.HasOne("Armory.BL.Model.WeaponType", "Type")
                        .WithMany("Weapons")
                        .HasForeignKey("TypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Armory.BL.Model.Ammunition", b =>
                {
                    b.Navigation("Acts");
                });

            modelBuilder.Entity("Armory.BL.Model.City", b =>
                {
                    b.Navigation("Acts");
                });

            modelBuilder.Entity("Armory.BL.Model.CrewMember", b =>
                {
                    b.Navigation("Acts");
                });

            modelBuilder.Entity("Armory.BL.Model.Position", b =>
                {
                    b.Navigation("SecurityOfficers");
                });

            modelBuilder.Entity("Armory.BL.Model.SecurityOfficer", b =>
                {
                    b.Navigation("Acts");
                });

            modelBuilder.Entity("Armory.BL.Model.Weapon", b =>
                {
                    b.Navigation("Acts");
                });

            modelBuilder.Entity("Armory.BL.Model.WeaponType", b =>
                {
                    b.Navigation("Weapons");
                });
#pragma warning restore 612, 618
        }
    }
}
